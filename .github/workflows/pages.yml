name: GitHub Pages

on:
  push:
    branches: ["main"]
  schedule:
    - cron: "0 */12 * * *"

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Setup node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22.14
          cache: 'npm'

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2.35.5
        with:
          php-version: '8.3'
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        shell: bash
        run: |
          echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache composer cache directory
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer

      - name: Install dependencies with composer
        run: composer install --prefer-dist --no-dev

      - name: Create data.json
        run: php create-data-file.php
        working-directory: ./.pages/scripts

      - name: Update app.js
        run: php update-app-js.php
        working-directory: ./.pages/scripts

      - name: Run npm
        run: npm ci

      - name: Run Build demo (esbuild)
        run: node ./esbuild/build-demo.js

      - name: Copy .pages/data.json
        run: cp .pages/data.json ./dist/data.json

      - name: Create website folder
        run: mkdir ./website

      - name: Copy dist to demo folder
        run: cp -r ./dist ./website/demo

      - name: Upload artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: './website/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
